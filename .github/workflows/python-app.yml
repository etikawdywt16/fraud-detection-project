# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10" 

  docker-pull-ec-2:
    needs: build

    runs-on: ubuntu-latest
    steps:
    - name: Creating SSH Configuration File
      env:
          SSH_USER: ${{ secrets.USER }}
          SSH_KEY: ${{ secrets.SSH_KEY }}
          SSH_HOST: ${{ secrets.HOST }}

      run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/deployment.pem
          chmod 600 ~/.ssh/deployment.pem
          cat >> ~/.ssh/config <<END
          Host deploy_ec2
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/deployment.pem
            StrictHostKeyChecking no
          END
    - name: Deploy to EC2
      env:
        PATH_FILE: fraud-detection-project
        API_SERVICE_IMAGE: fraud-detection-api
        STREAMLIT_SERVICE_IMAGE: fraud-detection-streamlit
      run: |
          ssh deploy_ec2 "mkdir temp"
          ssh deploy_ec2 "git clone https://github.com/etikawdywt16/fraud-detection-project.git temp"
          ssh deploy_ec2 "rsync -a temp/ $PATH_FILE"
          ssh deploy_ec2 "rm -rf temp/"
          ssh deploy_ec2 "cd $PATH_FILE"
          ssh deploy_ec2 "cd $PATH_FILE && sudo docker compose down"
          ssh deploy_ec2 "cd $PATH_FILE || sudo docker rmi $API_SERVICE_IMAGE -f || sudo docker rmi  -f"
          ssh deploy_ec2 "cd $PATH_FILE && sudo docker compose build && sudo docker compose up -d"
